generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  ProductID   Int      @id @unique(map: "ProductID") @default(autoincrement())
  ProductName String   @db.VarChar(11)
  ProductType String   @db.VarChar(11)
  Description String?  @db.VarChar(200)
  Price       Int      @db.SmallInt
  Amount      Int      @db.MediumInt
  ProductPic  Bytes?   @db.Blob
  DateCreated DateTime @default(now()) @db.Timestamp(0)
  cartItems   CartItem[]
  Order       Order[]
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  role      Role   @default(customer)
  password  String
  createdAt DateTime @default(now())
  phone     String   @unique
  updatedAt DateTime @updatedAt
  cartItems CartItem[]
  Order     Order[]
  Address   Address[]
}

model CartItem {
  id        Int     @id @default(autoincrement())
  quantity  Int
  userId    Int
  productId Int
  user      User    @relation(fields: [userId], references: [id])
  product   Product @relation(fields: [productId], references: [ProductID])

  @@unique([userId, productId])
}

model Order {
  id            Int      @id @default(autoincrement())
  userId        Int
  productId     Int
  quantity      Int
  totalPrice    Int
  addressId     Int
  status        String   @default("Pending")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user          User     @relation(fields: [userId], references: [id])
  product       Product  @relation(fields: [productId], references: [ProductID])
  address       Address  @relation(fields: [addressId], references: [id])
}

model Address {
  id        Int      @id @default(autoincrement())
  userId    Int
  province  String   @db.VarChar(100)
  amphoe    String   @db.VarChar(100)
  tambon    String   @db.VarChar(100)
  addressLine String @db.VarChar(200)
  postalCode String  @db.VarChar(10)
  Order     Order[]

  user User @relation(fields: [userId], references: [id])
}

enum Role {
  customer
  farmer
  admin
}
